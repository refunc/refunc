/*
Copyright 2025 The refunc Authors

TODO: choose a opensource licence.
*/

// Code generated by informer-gen. DO NOT EDIT.

package v1beta3

import (
	internalinterfaces "github.com/refunc/refunc/pkg/generated/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Funcdeves returns a FuncdefInformer.
	Funcdeves() FuncdefInformer
	// Funcinsts returns a FuncinstInformer.
	Funcinsts() FuncinstInformer
	// Triggers returns a TriggerInformer.
	Triggers() TriggerInformer
	// Xenvs returns a XenvInformer.
	Xenvs() XenvInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Funcdeves returns a FuncdefInformer.
func (v *version) Funcdeves() FuncdefInformer {
	return &funcdefInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Funcinsts returns a FuncinstInformer.
func (v *version) Funcinsts() FuncinstInformer {
	return &funcinstInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Triggers returns a TriggerInformer.
func (v *version) Triggers() TriggerInformer {
	return &triggerInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Xenvs returns a XenvInformer.
func (v *version) Xenvs() XenvInformer {
	return &xenvInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
